@using RestaurantBookingSystem.Infrastructure.DataEntities
@using RestaurantBookingSystem.Infrastructure.Repositories
@model RestaurantBookingSystem.Models.RestaurantTableModel
@{
    ViewBag.Title = "Add Table";
}
<h2>Add Table</h2>
@section head
{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
}
@using (Html.BeginForm("Add", "Tables", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Enter Details for a new table</legend>
        <div class="editor-label">
            @Html.LabelFor(model => model.TableType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TableType)
            @Html.ValidationMessageFor(model => model.TableType)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Alignment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Alignment)
            @Html.ValidationMessageFor(model => model.Alignment)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.PositionX)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PositionX)
            @Html.ValidationMessageFor(model => model.PositionX)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.PositionY)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PositionY)
            @Html.ValidationMessageFor(model => model.PositionY)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.FloorPlanFileName)
        </div>
        <div class="editor-field">
            @{
                var floorplan = new Dictionary<string, string> { { "---Select---", String.Empty } };
                var tables = new RestaurantTableRepository().SelectAll().GroupBy(table => table.FloorPlanFileName);
                if (tables.Count() > 0)
                {
                    // ReSharper disable ReturnValueOfPureMethodIsNotUsed
                    tables.Select((group, index) =>
                    {
                        floorplan.Add("Floor Plan " + (index+1), group.Key);
                        return true;
                    }).ToList();
                    // ReSharper restore ReturnValueOfPureMethodIsNotUsed
                }
                //floorplan = new Dictionary<string, string> { { "---Select---", String.Empty }, { "Floor Plan 1", Guid.NewGuid().ToString("n") }, { "Floor Plan 2", Guid.NewGuid().ToString("n") } };
            }
            @if (floorplan.Count() > 1)
            {
                @Html.DropDownList("FloorPlan", floorplan.Select((kvp) => new SelectListItem { Selected = false, Text = kvp.Key, Value = kvp.Value }));
            }
            else
            {
                <input type="file" id="FloorPlan" name="FloorPlan" />
            }
            <span class="ui-helper-hidden">@Html.EditorFor(model => model.FloorPlanFileName)</span>
            @Html.ValidationMessageFor(model => model.FloorPlanFileName)
        </div>
        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type="text/javascript">
    $('#FloorPlanFileName').val($('#FloorPlan').val());
    if ($('#Price').val() === '0') $('#Price').val('');
    if ($('#PositionX').val() === '0') $('#PositionX').val('');
    if ($('#PositionY').val() === '0') $('#PositionY').val('');
    $('#FloorPlanFileName').disableSelection().css({ 'background-color': '#ddd' });
    $('#FloorPlan').change(function () {
        console.log($(this).val());
        $('#FloorPlanFileName').val($(this).val());
    });
</script>
